name: Deploy to 3-idiots-team

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: 소스 저장소 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SSH 키 설치
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.MIRROR_SSH_PRIVATE_KEY }}

      - name: GitHub를 신뢰할 수 있는 호스트에 추가
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: 새로운 작성자로 대상 저장소에 푸시
        run: |
          # 환경변수 설정
          export GIT_AUTHOR_NAME="${{ secrets.DEPLOY_AUTHOR }}"
          export GIT_AUTHOR_EMAIL="${{ secrets.DEPLOY_AUTHOR_EMAIL }}"
          export GIT_COMMITTER_NAME="${{ secrets.DEPLOY_AUTHOR }}"
          export GIT_COMMITTER_EMAIL="${{ secrets.DEPLOY_AUTHOR_EMAIL }}"

          # Git 설정
          git config --global core.autocrlf false
          git config --global core.safecrlf false

          # 소스 파일을 임시 디렉토리로 복사
          TEMP_DIR=$(mktemp -d)
          cp -rf $GITHUB_WORKSPACE/* $TEMP_DIR/

          # 타겟 저장소 클론
          git clone ${{ secrets.TARGET_REPOSITORY_URL }} target_repo
          cd target_repo

          # 기존 파일 제거 (숨김 파일 제외)
          rm -rf *

          # 임시 디렉토리에서 파일 복사
          cp -rf $TEMP_DIR/* ./

          # pnpm lock 파일 재생성
          pnpm install --no-frozen-lockfile

          # Git 상태 확인 및 디버깅
          echo "Current directory contents:"
          ls -la
          echo "Git status:"
          git status

          # 변경사항 커밋 및 푸시
          git add -A
          git commit -m "Sync with source repository and update dependencies"

          # 커밋 작성자 정보 재작성
          git filter-branch -f --env-filter '
          export GIT_AUTHOR_NAME="${{ secrets.DEPLOY_AUTHOR }}"
          export GIT_AUTHOR_EMAIL="${{ secrets.DEPLOY_AUTHOR_EMAIL }}"
          export GIT_COMMITTER_NAME="${{ secrets.DEPLOY_AUTHOR }}"
          export GIT_COMMITTER_EMAIL="${{ secrets.DEPLOY_AUTHOR_EMAIL }}"
          ' HEAD~1..HEAD

          git push origin main

          # 임시 디렉토리 삭제
          rm -rf $TEMP_DIR
