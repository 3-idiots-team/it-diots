name: Deploy to Production

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v3

      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: pnpm 설치
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.0
          run_install: false

      - name: pnpm 스토어 디렉토리 가져오기
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: pnpm 캐시 설정
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: web 앱 직접 설치 및 빌드
        run: |
          cd apps/web

          sed -i 's/"next": "catalog:"/"next": "15.1.7"/g' package.json
          sed -i 's/"eslint": "catalog:"/"eslint": "^8.57.0"/g' package.json
          sed -i 's/"tailwindcss": "catalog:"/"tailwindcss": "^3.4.1"/g' package.json
          sed -i 's/"typescript": "catalog:"/"typescript": "^5.3.3"/g' package.json
          sed -i 's/"@types\/node": "catalog:"/"@types\/node": "^20.11.24"/g' package.json
          sed -i 's/"@types\/eslint": "catalog:"/"@types\/eslint": "^8.56.2"/g' package.json
          sed -i 's/"lucide-react": "catalog:"/"lucide-react": "^0.294.0"/g' package.json

          sed -i 's/"@it-diots\/ui": "workspace:\*"/"@it-diots\/ui": "1.0.0"/g' package.json
          sed -i 's/"@it-diots\/supabase": "workspace:\*"/"@it-diots\/supabase": "1.0.0"/g' package.json
          sed -i 's/"@it-diots\/eslint-config": "workspace:\*"/"@it-diots\/eslint-config": "0.0.0"/g' package.json
          sed -i 's/"@it-diots\/typescript-config": "workspace:\*"/"@it-diots\/typescript-config": "0.0.0"/g' package.json

          pnpm install --no-frozen-lockfile

          pnpm build

      - name: Vercel CLI 설치
        run: pnpm add -g vercel

      - name: vercel.json 파일 생성
        run: |
          cat > apps/web/vercel.json << 'EOL'
          {
            "buildCommand": "pnpm build",
            "installCommand": "pnpm install",
            "framework": "nextjs"
          }
          EOL

      - name: 개인 Vercel 계정으로 배포
        run: |
          # 루트 디렉토리에서 --cwd 옵션으로 작업 디렉토리 지정
          vercel deploy --prod --token=${{ secrets.PERSONAL_VERCEL_TOKEN }} --cwd=./apps/web --yes
        env:
          VERCEL_TOKEN: ${{ secrets.PERSONAL_VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.PERSONAL_VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.PERSONAL_VERCEL_ORG_ID }}
